services:
  identity-api:
    build:
      context: C:\MYP\microServiceStarter\MicroServiceStarter\src
      dockerfile: C:\MYP\microServiceStarter\MicroServiceStarter\src\Services\Identity\Identity.API\dockerfile
    depends_on:
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ""
      ConnectionString: Server=sqldata;Database=microServiceStarter.Service.IdentityDb;User
        Id=sa;Password=Pass@word
      MvcClient: http://host.docker.internal:6100
      OrchestratorType: ""
      UseCustomizationData: "True"
    image: msstr/identity.api:linux-latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: 6105
      protocol: tcp
  sqldata:
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Pass@word
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 1433
      published: 6433
      protocol: tcp
    volumes:
    - type: volume
      source: mssql-sqldata
      target: /var/opt/mssql
      volume: {}
  webmvc:
    build:
      context: C:\MYP\microServiceStarter\MicroServiceStarter\src
      dockerfile: C:\MYP\microServiceStarter\MicroServiceStarter\src\Web\WebMVC\dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ""
      IdentityUrl: http://host.docker.internal:6105
      IdentityUrlHC: http://identity-api/hc
      OrchestratorType: ""
      UseCustomizationData: "True"
    image: msstr/webmvc:linux-latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: 6100
      protocol: tcp
networks:
  default:
    name: dockercompose17674480211955883176_default
volumes:
  mssql-sqldata:
    name: dockercompose17674480211955883176_mssql-sqldata